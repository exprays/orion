name: Build and Release Go Binaries with Signing (Windows)

on:
  push:
    tags: 
      - 'v*.*.*'
      - 'v*.*.*-nightly'
      - 'v*.*.*-alpha'
      - 'v*.*.*-beta'
      - 'v*.*.*-rc'
      - 'v*.*.*-stable'
      - 'v*.*.*-final'

jobs:
  build-and-release:
    runs-on: windows-latest  # Switch to windows runner

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.4'  # Update with desired Go version (e.g., 1.19)

      - name: Build orion executable
        run: |
          go build -o cmd/server/orion ./cmd/server/orion.go

      - name: Build hunter executable
        run: |
          go build -o cmd/hunter/hunter ./cmd/hunter/hunter.go

      - name: Sign executables with Azure Trusted Signing
        uses: Azure/trusted-signing-action@v0.3.20  # Update version if needed
        env:
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        with:
          endpoint: https://eus.codesigning.azure.net/  # Update endpoint if needed
          trusted-signing-account-name: suryakantsubudhi533gmail.onmicrosoft.com
          certificate-profile-name: orion
          files: cmd/server/orion cmd/hunter/hunter 
          file-digest: SHA256
          timestamp-rfc3161: http://timestamp.acs.microsoft.com
          timestamp-digest: SHA256

      - name: Install GitHub CLI tool
        uses: actions4gh/setup-gh@v1  # Install the 'gh' CLI tool

      - name: Upload Release Assets
        run: |  # Upload signed executables as release assets
          gh release upload ${{ github.ref }} cmd/server/orion cmd/hunter/hunter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
