name: Release Go Project

on:
  workflow_run:
    workflows: ["Build Go Project"]
    types:
      - completed

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Server Binary
        uses: actions/download-artifact@v3
        with:
          name: server-linux-amd64
          path: ./release/server-linux-amd64/

      - name: Download Hunter CLI Binary
        uses: actions/download-artifact@v3
        with:
          name: hunter-linux-amd64
          path: ./release/hunter-linux-amd64/

      - name: Download Windows Server Binary
        uses: actions/download-artifact@v3
        with:
          name: server-windows-amd64
          path: ./release/server-windows-amd64/

      - name: Download Windows Hunter CLI Binary
        uses: actions/download-artifact@v3
        with:
          name: hunter-windows-amd64
          path: ./release/hunter-windows-amd64/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Server Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/server-linux-amd64/orion
          asset_name: orion-${{ github.ref_name }}-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Hunter CLI Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/hunter-linux-amd64/hunter
          asset_name: hunter-${{ github.ref_name }}-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Windows Server Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/server-windows-amd64/orion.exe
          asset_name: orion-${{ github.ref_name }}-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Windows Hunter CLI Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/hunter-windows-amd64/hunter.exe
          asset_name: hunter-${{ github.ref_name }}-windows-amd64.exe
          asset_content_type: application/octet-stream
